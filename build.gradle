plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
}

group = 'io.hainenber'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// **** Application ****
	// Baseline Spring Boot.
	implementation('org.springframework.boot:spring-boot-starter:3.5.0')
	implementation('com.fasterxml.jackson.core:jackson-annotations:2.19.0')
	implementation('com.fasterxml.jackson.core:jackson-databind:2.19.0')
	// Ensure Jakarta Persistence package version to be the same with bundled of spring-boot-starter-data-jpa
	implementation('jakarta.persistence:jakarta.persistence-api:3.1.0')

	// To build REST services.
	implementation('org.springframework.boot:spring-boot-starter-web:3.5.0')

	// To connect with Postgres RDBMS.
	implementation('org.springframework.boot:spring-boot-starter-data-jpa:3.5.0')
	implementation('org.postgresql:postgresql:42.7.5')

	// To fetch CVEs from remote Git repository.
	implementation('org.eclipse.jgit:org.eclipse.jgit:7.2.1.202505142326-r')

	// To load CVEs into OpenSearch server.
	implementation('org.opensearch.client:opensearch-java:2.24.0')
	implementation('org.apache.httpcomponents.client5:httpclient5:5.5')
	implementation('org.apache.httpcomponents.core5:httpcore5-h2:5.3.4')

	// **** Testing ****
	testImplementation('org.springframework.boot:spring-boot-starter-test:3.5.0')
	testImplementation('org.springframework.boot:spring-boot-test-autoconfigure:3.5.0')
	testImplementation('org.springframework.boot:spring-boot-testcontainers:3.5.0')
	testImplementation('org.testcontainers:junit-jupiter:1.21.0')
	testImplementation('org.testcontainers:postgresql')
	testImplementation('org.opensearch:opensearch-testcontainers:2.1.3')
	testImplementation('org.awaitility:awaitility:4.3.0')

	// **** Vulnerability fixes ****
	implementation('org.apache.commons:commons-compress:1.27.1')
}

checkstyle {
	toolVersion = "10.23.1"
}

// Not build out plain JAR.
jar {
	enabled = false
	archiveFileName = bootJar.archiveFileName
}

// Prevent potential conflict between transitive `commons-logging` module
// and Spring Boot's pre-configured logger
configurations.implementation {
	exclude group: 'commons-logging', module: 'commons-logging'
}

// Fixes null injected beans when running for integration tests.
test {
	useJUnitPlatform()
}
